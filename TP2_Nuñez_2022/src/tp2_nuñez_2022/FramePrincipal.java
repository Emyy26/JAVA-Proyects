/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp2_nuñez_2022;

import java.util.*;
        
/**
 *@GwtCompatible
 * @author emi
 */
public class FramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Ejercicio 1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 0, 153));
        jButton2.setText("Ejercicio 2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 51, 255));
        jLabel1.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Trabajo Practico N° 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jLabel1))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        /*EJERCICIO 2: Similar al Ejercicio 1, es decir, considerando la misma información de huespedes y visitas,
encontrar las visitas de Medina, Mónica y Gomez, Alberto, posteriormente registrar la información
en un array multidimensional. Por último emitir por consola dicho array.-.*/
        Map<Integer,String> huespedes = new HashMap<Integer,String>();
            huespedes.put(204,"Galarza, Veronica");
            huespedes.put(111,"Gomez, Alberto");
            huespedes.put(11,"Peres, Juan");
            huespedes.put(2087,"Medina, Mónica");
            
        Map<Integer, ArrayList<String>> historialVisitas = new HashMap<Integer, ArrayList<String>>();

            historialVisitas.put(204, new ArrayList<String>());
            historialVisitas.put(111, new ArrayList<String>());
            historialVisitas.put(11, new ArrayList<String>());
            historialVisitas.put(2087, new ArrayList<String>());
        
            historialVisitas.get(204).add("Hab. Nro 10 de 14:00 a 22:00");
            historialVisitas.get(111).add("Hab. Nro 20 de 22:00 a 09:00");
            historialVisitas.get(11).add("Hab. Nro 15 de 19:00 a 05:00");
            historialVisitas.get(204).add("Hab. Nro 8 de 15:00 a 23:00");
            historialVisitas.get(2087).add("Hab. Nro 1 de 09:00 a 23:00");
            historialVisitas.get(204).add("Hab. Nro 6 de 09:00 a 23:00");
            historialVisitas.get(2087).add("Hab. Nro 3 de 09:00 a 15:00");
            historialVisitas.get(2087).add("Hab. Nro 23 de 01:00 a 22:00");
            historialVisitas.get(2087).add("Hab. Nro 5 de 01:00 a 23:00");
            
            int variableAux1 = 0;
            int variableAux2 = 0;       
            for (int i : huespedes.keySet()) {
                if (huespedes.get(i)== "Medina, Mónica"){
                    variableAux1 = i;
                    break;
                }else{
                    continue;
                }
            }
            for (int i : huespedes.keySet()) {
                if (huespedes.get(i)== "Gomez, Alberto"){
                    variableAux2 = i;
                    break;
                }else{
                    continue;
                }
            }
            ArrayList<String> valores1 = new ArrayList<String>();
            ArrayList<String> valores2 = new ArrayList<String>();
            
            valores1.add("Medina, Mónica");
            valores2.add("Gomez, Alberto");
            
            Iterator<String> iterador1 = historialVisitas.get(variableAux1).iterator();
            String valor1;
            while (iterador1.hasNext()){
                valor1 = iterador1.next();
                valores1.add(valor1);
            }
            Iterator<String> iterador2 = historialVisitas.get(variableAux2).iterator();
            
            String valor2;
            while (iterador2.hasNext()){
                valor2 = iterador2.next();
                valores2.add(valor2); } 
            valores2.add("sin visita");
            valores2.add("sin visita");
            valores2.add("sin visita");     
           
            List<List<String>> ArrayMulti = new ArrayList<List<String>>();
            ArrayMulti.add(valores1);
            ArrayMulti.add(valores2);
            
            System.out.println("-------------------------");
            System.out.println("Visitas: ");
            System.out.println("-------------------------");
            for (int i = 0; i <= ArrayMulti.size()-1; i++) { 
                System.out.println("Persona: " + ArrayMulti.get(i).get(0) +"\n"+"--Primer visita: "
                        + ArrayMulti.get(i).get(1) +"\n"+ "--Segunda visita: " + ArrayMulti.get(i).get(2)
                        +"\n" +"--Tercera visita: " + ArrayMulti.get(i).get(3)+"\n"+"--Cuarta visita: " + ArrayMulti.get(i).get(4)+"\n");
            }
            System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
            
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*EJERCICIO 1: El dueño de un Hotel, necesita saber cuantas veces un huesped visito su hotel. La
información se presenta a continuación. Con la información proporcionada encontrar y registrar en un array las visitas que hizo
Medina, Mónica, posteriormente emitir por consola la información de visitas.*/
        Map<Integer,String> huespedes = new HashMap<Integer,String>();
            huespedes.put(204,"Galarza, Veronica");
            huespedes.put(111,"Gomez, Alberto");
            huespedes.put(11,"Peres, Juan");
            huespedes.put(2087,"Medina, Mónica");
            
        Map<Integer, ArrayList<String>> historialVisitas = new HashMap<Integer, ArrayList<String>>();

            historialVisitas.put(204, new ArrayList<String>());
            historialVisitas.put(111, new ArrayList<String>());
            historialVisitas.put(11, new ArrayList<String>());
            historialVisitas.put(2087, new ArrayList<String>());
        
            historialVisitas.get(204).add("Hab. Nro 10 de 14:00 a 22:00");
            historialVisitas.get(111).add("Hab. Nro 20 de 22:00 a 09:00");
            historialVisitas.get(11).add("Hab. Nro 15 de 19:00 a 05:00");
            historialVisitas.get(204).add("Hab. Nro 8 de 15:00 a 23:00");
            historialVisitas.get(2087).add("Hab. Nro 1 de 09:00 a 23:00");
            historialVisitas.get(204).add("Hab. Nro 6 de 09:00 a 23:00");
            historialVisitas.get(2087).add("Hab. Nro 3 de 09:00 a 15:00");
            historialVisitas.get(2087).add("Hab. Nro 23 de 01:00 a 22:00");
            historialVisitas.get(2087).add("Hab. Nro 5 de 01:00 a 23:00");
            
            int variableAux = 0;
                    
            for (int i : huespedes.keySet()) {
                if (huespedes.get(i)== "Medina, Mónica"){
                    variableAux = i;
                    break;
                }else{
                    continue;
                }
            }
            
            System.out.println("Las visitas de Medina, Mónica son: "+"\n"+"\n"+historialVisitas.get(variableAux));
            System.exit(0);
            
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}

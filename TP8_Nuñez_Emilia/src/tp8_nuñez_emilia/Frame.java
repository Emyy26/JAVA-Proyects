/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp8_nuñez_emilia;

import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author emi
 */
public class Frame extends javax.swing.JFrame {
    //Se crea el array list.
    ArrayList<Perro> dogs = new ArrayList<Perro>();
    
    //se creó una funcion con una expresion regular para saber si solo contiene letras una variable.
    public static boolean isAlpha(String s) {
        return s != null && s.matches("^[a-zA-Z\\s]*$");
    }
    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        name_Text = new javax.swing.JTextField();
        age_Text = new javax.swing.JTextField();
        weight_Text = new javax.swing.JTextField();
        breed_Text = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        name_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_TextActionPerformed(evt);
            }
        });

        weight_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weight_TextActionPerformed(evt);
            }
        });

        breed_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breed_TextActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Edad:");

        jLabel3.setText("Peso:");

        jLabel4.setText("Raza:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(breed_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(weight_Text, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addComponent(age_Text, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(age_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(weight_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(breed_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void name_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_TextActionPerformed
        
    }//GEN-LAST:event_name_TextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //se crean las variables.
        String name = name_Text.getText().trim();
        String breed = breed_Text.getText().trim();
        int age = 0;
        double weight = 0.0;
        String correctName = "";
        String correctBreed = "";
        String ageText = age_Text.getText().trim();
        String weightText = weight_Text.getText().trim();
    
        // se comprueba si el nombre cumple con la condicion de solo tener letras.
        if (isAlpha(name)) {
            correctName = name;
        } else {
            JOptionPane.showMessageDialog(jButton1, "Para ingresar el nombre solo se permiten letras!", "Atencion", JOptionPane.WARNING_MESSAGE);
            name_Text.setText("");
            name_Text.requestFocus();
        }
        // se comprueba si la raza cumple con la condicion de solo tener letras.
        if (isAlpha(breed)) {
            correctBreed = breed;
        } else {
            JOptionPane.showMessageDialog(jButton1, "Para ingresar la raza solo se permiten letras!", "Atencion", JOptionPane.WARNING_MESSAGE);
            breed_Text.setText("");
            breed_Text.requestFocus();
        }
       
        // se comprueba si la edad cumple con la condicion de solo tener números.
        try {
            ageText.chars().allMatch(Character::isDigit);
            //se transforma el dato de string a int.
            age = Integer.parseInt(age_Text.getText().trim());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(jButton1, "Para ingresar la edad solo se permiten números!", "Atencion", JOptionPane.WARNING_MESSAGE);
            age_Text.setText("");
            age_Text.requestFocus();
        }
        
        // se comprueba si el peso cumple con la condicion de solo tener números.
        try {
            //se transforma el dato de string a double, mientras se comprueba si solo contiene números.
            weight = Double.parseDouble(weightText);
        } 
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(jButton1, "Para ingresar el peso solo se permiten números!", "Atencion", JOptionPane.WARNING_MESSAGE);
            weight_Text.setText("");
            weight_Text.requestFocus();
        }
        
        Perro p = new Perro();
        
        /*si cumple con las condiciones, se cargaran los datos en el arraylist, luego se imprimirá 
        por pantalla los datos cargados, y por ultimo dejará vacios los campos de datos*/
        if (age > 0 && weight > 0.0 && !correctName.isEmpty() && !correctBreed.isEmpty()){
            p.setName(name);
            p.setWeight(weight);
            p.setBreed(breed);
            p.setAge(age);

            dogs.add(p);

            for (int i = 0; i < dogs.size(); i++) {
                Perro d = dogs.get(i);
                String namePrint = d.getName();
                String breedPrint = d.getBreed();
                int agePrint = d.getAge();
                double weightPrint= d.getWeight();
                System.out.println("Lista: El nombre del perro es: " + namePrint + " la edad es: " + agePrint + " su peso es: " + weightPrint + " y su raza es : " + breedPrint);
            }
            name_Text.setText("");
            age_Text.setText("");
            weight_Text.setText("");
            breed_Text.setText("");
            name_Text.requestFocus();
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void weight_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weight_TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weight_TextActionPerformed

    private void breed_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breed_TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breed_TextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age_Text;
    private javax.swing.JTextField breed_Text;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField name_Text;
    private javax.swing.JTextField weight_Text;
    // End of variables declaration//GEN-END:variables
}
